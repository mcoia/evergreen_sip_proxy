---
### ansible-playbook /mnt/evergreen/playbooks/restart_app_services.yml --private-key /home/blake/.ssh/id_rsa -vvvv -e "hosts=192.168.12.49"

- hosts: '127.0.0.1'
  connection: local
  remote_user: ubuntu
  become_method: sudo
  vars_files:
    - 16.04.yml
  tasks:
  - name: starting ssh
    service:
      name: ssh
      state: started
  - lineinfile: "dest=/etc/sudoers state=present regexp='^%sudo' line='%sudo ALL=(ALL) NOPASSWD: ALL'"
  - name: Setting Timezone
    become: true
    ignore_errors: yes
    shell: echo America/Chicago > /etc/timezone
  - name: Setting Timezone
    become: true
    ignore_errors: yes
    shell: timedatectl set-timezone America/Chicago
  - name: Setting up group
    group:
      name: "{{ share_user }}"
      state: present
  - name: Creating {{ share_user }} user
    become: true
    user:
      name: "{{ share_user }}"
      shell: /bin/bash
      group: "{{ share_user }}"
  - name: Creating share folder
    become: true
    file: path={{ samba_share }} state=directory owner={{ share_user }} group={{ share_user }} mode=0775 recurse=yes
  - name: Creating share logs folder
    become: true
    file: path={{ log_directory }} state=directory owner={{ share_user }} group={{ share_user }} mode=0775
  - name: Install Perl modules install DateTime
    become: true
    shell: export PERL_MM_USE_DEFAULT=1 && perl -MCPAN -e 'install DateTime'
    environment:
      PATH: "{{ ansible_env.PATH }}"
  - name: Install Perl modules install DateTime::Format
    become: true
    shell: export PERL_MM_USE_DEFAULT=1 && perl -MCPAN -e 'install DateTime::Format'
    environment:
      PATH: "{{ ansible_env.PATH }}"
  - name: Install Perl modules DateTime::Format::Duration
    become: true
    shell: export PERL_MM_USE_DEFAULT=1 && perl -MCPAN -e 'install DateTime::Format::Duration'
    environment:
      PATH: "{{ ansible_env.PATH }}"
  - name: Install Perl modules install IO::Select
    become: true
    shell: export PERL_MM_USE_DEFAULT=1 && perl -MCPAN -e 'install IO::Select'
    environment:
      PATH: "{{ ansible_env.PATH }}"
  - name: Install Perl modules  IO::Socket::INET
    become: true
    shell: export PERL_MM_USE_DEFAULT=1 && perl -MCPAN -e 'install IO::Socket::INET'
    environment:
      PATH: "{{ ansible_env.PATH }}"
  - name: Setup Logrotate
    become: true
    file: 
      path: /etc/logrotate.d/sip_proxy
      owner: root
      group: root
      mode: 0644
      state: touch
  - lineinfile: "dest=/etc/logrotate.d/sip_proxy insertbefore='}' state=present regexp='{{ log_directory }}' line='{{ log_directory }}/*.log {'"
  - lineinfile: "dest=/etc/logrotate.d/sip_proxy insertbefore='}' state=present regexp='rotate' line='  rotate 14'"
  - lineinfile: "dest=/etc/logrotate.d/sip_proxy insertbefore='}' state=present regexp='compress' line='  compress'"
  - lineinfile: "dest=/etc/logrotate.d/sip_proxy insertbefore='}' state=present regexp='size' line='  size 1M'"
  - lineinfile: "dest=/etc/logrotate.d/sip_proxy insertbefore='}' state=present regexp='notifempty' line='  notifempty'"
  - lineinfile: "dest=/etc/logrotate.d/sip_proxy insertbefore='}' state=present regexp='^su' line='  su {{ share_user }}'"
  - lineinfile: "dest=/etc/logrotate.d/sip_proxy insertbefore='endoffile' state=present regexp='\\}' line='}'"
  
  - lineinfile: "dest={{ samba_config_path }} state=present regexp='\\[' line='[{{ samba_share_name }}]'"
  - lineinfile: "dest={{ samba_config_path }} state=present regexp='path' line='        path = {{ samba_share }}'"
  - lineinfile: "dest={{ samba_config_path }} state=present regexp='force user' line='        force user = {{ share_user }}'"
  - name: Install samba
    apt: name=samba
  - name: Setup samba
    become: true
    shell: "cat {{ samba_config_path }} >> /etc/samba/smb.conf"
  - name: Setup samba
    lineinfile: "dest=/etc/samba/smb.conf state=present insertafter='\\[global\\]' regexp='security = ' line='security = user'"
  - name: Obfuscate the server NETBIOS name
    lineinfile: "dest=/etc/samba/smb.conf state=present insertafter='\\[global\\]' regexp='server string' line='server string = pipc'"
    become: true
  - name: Set {{ share_user }} password
    become: true
    shell: echo {{ share_user_pass }}> /etc/samba/p.txt && echo {{ share_user_pass }}>> /etc/samba/p.txt && cat /etc/samba/p.txt | smbpasswd -a -s {{ share_user }} && rm /etc/samba/p.txt
  - name: Restart Samba
    service:
      name: smbd
      state: restarted
  - lineinfile: "dest={{ proxy_service }} state=present regexp='^PATH_TO_SIP_SERVER' line='PATH_TO_SIP_SERVER=\"{{ proxy_server }}\"'"
  - lineinfile: "dest={{ proxy_service }} state=present regexp='^PATH_TO_CONF' line='PATH_TO_CONF=\"{{ path_to_server_conf }}\"'"
  - lineinfile: "dest={{ proxy_service }} state=present regexp='^LAST_CONF=' line='LAST_CONF=\"{{ path_to_last_conf }}\"'"
  
### Setup SSH Tunnel stuff
  - name: Install autossh
    apt: name=autossh
  - name: Make /home/{{ share_user }}/.ssh
    become: true
    file: 
      path: /home/{{ share_user }}/.ssh
      owner: "{{ share_user }}"
      group: "{{ share_user }}"
      mode: 0700
      state: directory
  - name: Make /home/{{ share_user }}/.ssh
    become: true
    file: 
      path: /home/root/.ssh
      owner: root
      group: root
      mode: 0700
      state: directory
  - name: Copy SSH Keys
    become: true
    shell: cp {{ ssh_tunnel_private_key }} /home/{{ share_user }}/.ssh/id_rsa
  - name: Copy SSH Keys
    become: true
    shell: cp {{ ssh_tunnel_public_key }} /home/{{ share_user }}/.ssh/id_rsa.pub && chown {{ share_user }}:{{ share_user }} /home/{{ share_user }}/.ssh/id_rsa*  &&  chmod 600 /home/{{ share_user }}/.ssh/id_rsa*
  - name: Setup .ssh/config
    become: true
    file: 
      path: /home/{{ share_user }}/.ssh/config
      owner: "{{ share_user }}"
      group: "{{ share_user }}"
      mode: 0644
      state: touch
  - lineinfile: "dest=/home/{{ share_user }}/.ssh/config insertbefore='endoffile' state=present regexp='Host\\s' line='Host {{ ssh_tunnel_shortname_label }}'"
  - lineinfile: "dest=/home/{{ share_user }}/.ssh/config insertbefore='endoffile' state=present regexp='HostName' line='    HostName sip.missourievergreen.org'"
  - lineinfile: "dest=/home/{{ share_user }}/.ssh/config insertbefore='endoffile' state=present regexp='IdentityFile' line='    IdentityFile /home/{{ share_user }}/.ssh/id_rsa'"
  - lineinfile: "dest=/home/{{ share_user }}/.ssh/config insertbefore='endoffile' state=present regexp='LocalForward' line='    LocalForward {{ ssh_tunnel_local_port }} 127.0.0.1:{{ ssh_tunnel_remote_port }}'"
  - lineinfile: "dest=/home/{{ share_user }}/.ssh/config insertbefore='endoffile' state=present regexp='StrictHostKeyChecking' line='    StrictHostKeyChecking no'"
  - lineinfile: "dest=/home/{{ share_user }}/.ssh/config insertbefore='endoffile' state=present regexp='User' line='    User {{ ssh_tunnel_username }}'"
  - lineinfile: "dest=/home/{{ share_user }}/.ssh/config insertbefore='endoffile' state=present regexp='ServerAliveInterval' line='    ServerAliveInterval 10'"
  - lineinfile: "dest=/home/{{ share_user }}/.ssh/config insertbefore='endoffile' state=present regexp='ServerAliveCountMax' line='    ServerAliveCountMax 1'"
  - name: Copy SSH config to root
    become: true
    shell: cp /home/{{ share_user }}/.ssh/config /root/.ssh/config && chmod 644 /root/.ssh/config
  
  

  - name: Ensure the cron for starting/restarting service is present
    become: true
    cron: name="(RE)start SIP proxy server" job=". ~/.bashrc && cd {{ proxy_server_root_folder }} && {{ proxy_service }}"
  - name: Start the proxy server
    become: true
    shell: "cd {{ proxy_server_root_folder }} && {{ proxy_service }} &"
...